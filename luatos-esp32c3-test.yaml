esphome:
  name: luatos-esp32c3-test
  friendly_name: luatos_esp32c3_test
  platformio_options:
    # flash_mode defaults to qio, but Air101/LuatOS requires dio mode
    board_build.f_flash: 40000000L
    board_build.flash_mode: dio
    board_build.flash_size: 4MB

# esp32:
#   board: esp32-c3-devkitm-1
#   framework:
#     type: arduino

esp32:
  # variant: ESP32C3
  board: airm2m_core_esp32c3
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret esphome_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Luatos-Esp32C3-Test"
    password: !secret wifi_ap_password

# esp32_ble_server:
  # manufacturer: "luatos_esp32c3_test"
  # manufacturer_data: [0x4C, 0, 0x23, 77, 0xF0 ]

# esp32_ble:
#   io_capability: keyboard_only
#   enable_on_boot: true

web_server:
  port: 80

output:
  - platform: gpio
    id: power_led
    pin: 
      number: GPIO12
      ignore_pin_validation_error: true
      # inverted: True
      mode: OUTPUT   

status_led:
  pin:
    number: GPIO13
    # inverted: true
    ignore_pin_validation_error: true

button:
  - platform: restart
    name: "Restart"

# binary_sensor:    
#   - platform: status
#     name: Status
#   - platform: gpio
#     name: Boot Switch
#     pin: 
#       number: GPIO00
#       inverted: true
#       mode:
#         input: true
#         pullup: true

i2c:
  sda: GPIO04
  scl: GPIO05
  scan: true
  id: bus_i2c

sensor:
  # - platform: sht3xd
  #   temperature:
  #     name: "Temperature"
  #   humidity:
  #     name: "Humidity"
  #   address: 0x44
  #   update_interval: 60s

  # Uptime sensor
  - platform: uptime
    id: sys_uptime
    type: seconds
    name: Uptime Sensor    
    entity_category: "diagnostic"

# Example configuration entry with 2 sensors and filter
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

  # Internal Temperature Sensor
  - platform: internal_temperature
    id: esp_internal_temperature
    name: "Internal Temperature"
    entity_category: "diagnostic"

  # Free memory
  - platform: template
    id: esp_memory
    icon: mdi:memory
    name: Free Memory
    lambda: return heap_caps_get_free_size(MALLOC_CAP_INTERNAL) / 1024;
    unit_of_measurement: 'kB'
    state_class: measurement
    entity_category: "diagnostic"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP Address
    # ssid:
    #   name: Connected SSID
    # bssid:
    #   name: Connected BSSID
    mac_address:
      name: Mac Wifi Address
    # scan_results:
    #   name: Latest Scan Results
    # dns_address:
    #   name: DNS Address

captive_portal:
