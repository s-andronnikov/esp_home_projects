# https://www.sudo.is/docs/esphome/boards/esp32c3supermini/
substitutions:
  device_name:     esp32c3_supermini
  friendly_name:   ESP32C3 Super Mini

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}
  platformio_options:
    board_build.f_flash: 40000000L
    board_build.flash_mode: dio
    board_build.flash_size: 4MB

esp32:
  board: esp32-c3-devkitm-1
  variant: ESP32C3
  framework:
    type: esp-idf
    version: 5.3.1 # https://github.com/espressif/esp-idf/releases
    platform_version: 6.9.0 # https://github.com/platformio/platform-espressif32/releases/
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_4MB: y


# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: Fallback ${device_name}
    password: !secret wifi_ap_password

ota:
  - platform: esphome
    password: !secret esphome_ota_password


# Enable logging
# logger:

captive_portal:

web_server:
 port: 80

# esp32_ble_tracker:
#   scan_parameters:
#     interval: 1100ms
#     window: 1100ms
#     active: true

# bluetooth_proxy:
#   active: true

# output:
#   - platform: gpio
#     id: power_led
#     pin: 
#       number: GPIO12
#       ignore_pin_validation_error: true
#       # inverted: True
#       mode: OUTPUT     

#light:
#  - platform: status_led
#    name: "Status LED"
#    id: esp_status_led
#    icon: "mdi:alarm-light"
#    pin:
#      number: GPIO8
#      inverted: true
#    restore_mode: ALWAYS_OFF

status_led:
  pin:
    number: GPIO8
    inverted: true

button:
  - platform: restart
    name: "Restart"

sensor:
  # Uptime sensor
  - platform: uptime
    id: sys_uptime
    type: seconds
    name: Uptime Sensor
    entity_category: "diagnostic"

# Example configuration entry with 2 sensors and filter
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

  # Internal Temperature Sensor
  - platform: internal_temperature
    id: esp_internal_temperature
    name: "Internal Temperature"
    entity_category: "diagnostic"

  # Free memory
  - platform: template
    id: esp_memory
    icon: mdi:memory
    name: Free Memory
    lambda: return heap_caps_get_free_size(MALLOC_CAP_INTERNAL) / 1024;
    unit_of_measurement: 'kB'
    state_class: measurement
    entity_category: "diagnostic"

text_sensor:
    - platform: wifi_info
      ip_address:
        name: IP Address
      mac_address:
        name: Mac Wifi Address
