# https://github.com/ivan-rio/ha_deck_cyd
# https://github.com/strange-v/ha_deck

substitutions:
  devicename: esp32-lvgl-sam1
  friendly:   esp32_lvgl_sam1
  SCREEN_MAIN: master

  SENSOR_ROOM1_TEMPERATURE: sensor.th05_2d7f_temperature
  SENSOR_ROOM1_HUMIDITY: sensor.th05_2d7f_humidity
  SENSOR_ROOM1_AIR_QUALITY_INDEX: sensor.luatos_esp32c3_ens160_air_quality_index
  SENSOR_ROOM1_ECO2: sensor.luatos_esp32c3_ens160_eco2
  SENSOR_ROOM1_TVOC: sensor.luatos_esp32c3_ens160_tvoc
  
  SENSOR_OUT_TEMPERATURE: sensor.street_kyrpychova_2_temperature
  SENSOR_OUT_HUMIDITY: sensor.street_kyrpychova_2_humidity
  SENSOR_OUT_AIR_QUALITY_INDEX: sensor.street_kyrpychova_2_pm2_5
  SENSOR_OUT_PM10: sensor.street_kyrpychova_2_pm10


packages:
  device: !include ./esp32-2432S028/device.yaml # include our test device setup

logger:

api:

ota:
  - platform: esphome
    password: !secret esphome_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

external_components:
  - source: ./esp32-2432S028/components
    components: [ hd_device_cyd, ha_deck]

# web_server:
#   port: 80
time:
  # - platform: sntp 
  - platform: homeassistant
    id: sntp_time
    timezone: Europe/Kyiv
    # on_time:
    #   - cron: '* * * * * *'
    #     then:
    #       lambda: |-
    #         auto time = id(sntp_time).now();
    #         if (time.is_valid()) {
    #           id(vc_local_time).set_value(time);    
    #         }

interval:
  - interval: 15sec
    then:
      lambda: |-
        auto time = id(sntp_time).now();
        if (time.is_valid()) {
          id(vc_local_time).set_value(time);    
        }


number:
  - platform: template
    id: screen_brightness
    name: Active screen brightness
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 75
    restore_value: true
    set_action:
      - lambda: |-
          if (!id(deck).get_inactivity())
            id(device).set_brightness(x);
  - platform: template
    id: inactive_screen_brightness
    name: Inactive screen brightness
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 30
    restore_value: true
    set_action:
      - lambda: |-
          if (id(deck).get_inactivity())
            id(device).set_brightness(x);

output:
  - platform: ledc
    pin: 10
    id: out_10

hd_device_cyd:
  id: device
  brightness: 75

sensor:
  # IN data
  - platform: homeassistant
    id: room1_temperature
    entity_id: ${SENSOR_ROOM1_TEMPERATURE}
    unit_of_measurement: "°C"
    internal: true

  - platform: homeassistant
    id: room1_humidity
    entity_id: ${SENSOR_ROOM1_HUMIDITY}
    unit_of_measurement: "%"
    internal: true
    
  - platform: homeassistant
    id: room1_air_quality_index
    entity_id: ${SENSOR_ROOM1_AIR_QUALITY_INDEX}
    internal: true

  - platform: homeassistant
    id: room1_air_eco2
    entity_id: ${SENSOR_ROOM1_ECO2}
    internal: true

  - platform: homeassistant
    id: room1_air_tvoc
    entity_id: ${SENSOR_ROOM1_TVOC}
    internal: true

  # OUT data
  - platform: homeassistant
    id: out_temperature
    entity_id: ${SENSOR_OUT_TEMPERATURE}
    unit_of_measurement: "°C"
    internal: true

  - platform: homeassistant
    id: out_humidity
    entity_id: ${SENSOR_OUT_HUMIDITY}
    unit_of_measurement: "%"    
    internal: true

  - platform: homeassistant
    id: out_air_quality_index
    entity_id: ${SENSOR_OUT_AIR_QUALITY_INDEX}
    internal: true

  - platform: homeassistant
    id: out_air_pm10
    entity_id: ${SENSOR_OUT_PM10}
    internal: true

  # Uptime sensor
  - platform: uptime
    id: sys_uptime
    type: seconds
    name: Uptime Sensor    
    entity_category: "diagnostic"

# Example configuration entry with 2 sensors and filter
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

  # Internal Temperature Sensor
  - platform: internal_temperature
    id: esp_internal_temperature
    name: "Internal Temperature"
    entity_category: "diagnostic"

  # Free memory
  - platform: template
    id: esp_memory
    icon: mdi:memory
    name: Free Memory
    lambda: return heap_caps_get_free_size(MALLOC_CAP_INTERNAL) / 1024;
    unit_of_measurement: 'kB'
    state_class: measurement
    entity_category: "diagnostic"    

ha_deck:
  id: deck
  main_screen: ${SCREEN_MAIN}
  inactivity:
    period: 60 # seconds
    #blank_screen: true
  on_inactivity_change:
    lambda:  |-
      if (x) {
        id(device).set_brightness(id(inactive_screen_brightness).state);
      } else {
        id(device).set_brightness(id(screen_brightness).state);
      }
  screens:
    - name: ${SCREEN_MAIN}
      widgets:
        - type: v-clock
          id: vc_local_time
          position: 5, 5
          dimensions: 207x73
          enabled: return true;

        - type: value-card
          id: vc_temperature
          position: 217, 5
          dimensions: 101x75
          # text: °C
          # icon: 󰔏
          enabled: return true;
          value: !lambda return str_sprintf("%0.1f°C\n%.0f%%", id(room1_temperature).state, id(room1_humidity).state);
        
        - type: value-card
          id: vc_air_quality_index
          position: 5, 83
          dimensions: 101x73
          text: AQI
          icon: 󰄻
          enabled: return true;
          value: !lambda return str_sprintf("%.0f", id(room1_air_quality_index).state);

        - type: value-card
          id: vc_air_eco2
          position: 111, 83
          dimensions: 101x73
          text: eco2
          icon: 󰟤
          enabled: return true;
          value: !lambda return str_sprintf("%.0f", id(room1_air_eco2).state);

        - type: value-card
          id: vc_air_tvoc
          position: 217, 83
          dimensions: 101x73
          text: tvoc
          icon: 󰐸
          enabled: return true;
          value: !lambda return str_sprintf("%.0f", id(room1_air_tvoc).state);              

        # 3rd Line
        - type: value-card
          id: vc_out_air_quality_index
          position: 5, 161
          dimensions: 101x73
          text: pm2.5
          enabled: return true;
          value: !lambda return str_sprintf("%.0f", id(out_air_quality_index).state);

        - type: value-card
          id: vc_out_air_pm10
          position: 111, 161
          dimensions: 101x73
          text: pm10
          enabled: return true;
          value: !lambda return str_sprintf("%.0f", id(out_air_pm10).state);      

        - type: value-card
          id: vc_out_temperature
          position: 217, 161
          dimensions: 101x73
          enabled: return true;
          value: !lambda return str_sprintf("%0.1f°C\n%.0f%%", id(out_temperature).state, id(out_humidity).state);  