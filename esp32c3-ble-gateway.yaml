esphome:
  name: esp32c3-ble-gateway
  friendly_name: esp32c3_ble_gateway
  platformio_options:
    board_build.f_flash: 40000000L
    board_build.flash_mode: dio
    board_build.flash_size: 4MB

esp32:
  # board: esp32dev
  # board: lolin32
  board: airm2m_core_esp32c3
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "U8eWLtyyB5ZC9ywz9eQKwSiG9KrjlGtJ4Mk/U3/oaGQ="

ota:
  - platform: esphome
    password: "eab0783837ea35b65db8b59db2ed1ac9"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Ble-Gateway"
    password: "rO80qF12OVtU"

captive_portal:

esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms
    active: true

bluetooth_proxy:
  active: true

# output:
#   - platform: gpio
#     id: power_led
#     pin: 
#       number: GPIO12
#       ignore_pin_validation_error: true
#       # inverted: True
#       mode: OUTPUT     

status_led:
  pin:
    # number: GPIO13
    number: GPIO8
    inverted: true
    # ignore_pin_validation_error: true

button:
  - platform: restart
    name: "Restart"

sensor:
    # Uptime sensor
  - platform: uptime
    id: sys_uptime
    type: seconds
    name: Uptime Sensor    
    entity_category: "diagnostic"
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

  # Internal Temperature Sensor
  - platform: internal_temperature
    id: esp_internal_temperature
    name: "Internal Temperature"
    entity_category: "diagnostic"

  # Free memory
  - platform: template
    id: esp_memory
    icon: mdi:memory
    name: Free Memory
    lambda: return heap_caps_get_free_size(MALLOC_CAP_INTERNAL) / 1024;
    unit_of_measurement: 'kB'
    state_class: measurement
    entity_category: "diagnostic"

text_sensor:
    - platform: wifi_info
      ip_address:
        name: IP Address
      mac_address:
        name: Mac Wifi Address
